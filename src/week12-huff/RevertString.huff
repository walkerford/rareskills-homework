
/**
 *  REVERT_STRING HUFF EXERCISE
 *
 *
 *  When a transaction is being executed within a smart contract, based on the logic of that contract, it can revert if a preset condition is not met.
 *  They're 2 main ways to revert in solidity, 
 *  - using a string error message e,g (`require(x != 0, "Only values above 0");`)
 *  - reverting with a custom error e.g (`if(x == 0) revert OnlyValuesAbove0();`)
 *
 *  The task is to write within the `MAIN` macro below, huff code that reverts (all the time) with the string error message `Only Huff`
*/

#define constant ONLY_HUFF = 0x4f6e6c792048756666

#define macro MAIN() = takes(0) returns(0) {
    // The test expects revert data encoded as abi.encode((bytes))

    // Encode the location of the first variable in the tuple
    0x20 0x00 mstore
    // Length of the bytes (9)
    0x09 0x20 mstore
    // Bytes of "Only Huff" shifted left
    __RIGHTPAD(0x4f6e6c792048756666) 0x40 mstore

    0x49 0x00 revert
}
