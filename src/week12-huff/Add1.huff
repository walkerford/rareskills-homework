
/** 
 *  ADD HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like addition etc
 *  
 *  The task is to write within the `MAIN` macro below, a function that takes in a uint256, adds 1 to it and returns the new value
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function add1(uint256) payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr  // [selector]

    // Jump to add
    dup1 __FUNC_SIG(add1)   eq addJump  jumpi

    // Revert
    0x00 0x00 revert

    addJump:

        // Get arg1
        0x04 calldataload   // [arg1]

        // Add 1
        0x01 add            // [sum]

        // Store arg1
        0x00 mstore         // []

        // Return value
        0x20 0x00 return
}