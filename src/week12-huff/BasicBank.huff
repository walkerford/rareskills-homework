/** 
 *  BASIC_BANK HUFF EXERCISE
 *  
 *  The task is to create a basic bank with huff
 * functionalities include
 *      - depositing tokens via similar to how solidity's `receive` function works
 *      - withdrawing tokens
 *      - keeping track of and viewing balance
 */

#define function balanceOf(address) payable returns(uint256)
#define function withdraw(uint256) payable returns()

#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xE0 shr                          // [sig]
    dup1 __FUNC_SIG(balanceOf) eq balanceOfJump jumpi   // [sig]
    __FUNC_SIG(withdraw) eq withdrawJump jumpi          // []

    // Receive
    0x00 0x00 return

balanceOfJump:
    selfbalance
    0x00 mstore
    0x20 0x00 return

withdrawJump:
    // Load amount
    0x04 calldataload   // [amount]
    dup1                // [amount amount]
    selfbalance         // [balance amount amount]
    
    // Validate amount
    lt                  // [bool amount]
    revertJump jumpi    // [amount]

    // Send amount
    push0 push0 push0 push0 // [argsOffset argsSize retOffset retSize amount]
    swap4                   // [amount argsOffset argsSize retOffset retSize]

    caller                  // [address amount argsOffset argsSize retOffset retSize]
    gas                     // [gas address amount argsOffset argsSize retOffset retSize]
    call                    // [success]

    0x00 mstore
    0x20 0x00 return

revertJump:             // [amount]
    pop                 // []
    0x00 0x00 revert


}
